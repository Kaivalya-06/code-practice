package Dynamic_Stack;

import SinglyLinkedList.Node;

public class Stack_using_Linked_list {
	private Node head;
	
	public Stack_using_Linked_list()
	{
		head = null;
	}
	
	public Node createNode(int val)
	{
		Node newNode = new Node();
		
		newNode.setData(val);
		newNode.setNext(null);
		return newNode;
	}
	
	public boolean isEmpty()
	{	
		if(head == null)
			return true;
		else
			return false;
	}
	
	public void pushElement(int a)
	{
		Node newNode = createNode(a);
		if(isEmpty())
		{
			head = newNode;
		}
		else
		{
			newNode.setData(a);
			newNode.setNext(head);
			head= newNode;	
		}
	}//push
	
	public int popElement()
	{
		int val = -1;
		if(!isEmpty()) {
		Node temp = head;
		val = temp.getData();
		head= temp.getNext();
		temp.setNext(null);
		
		}
		return val;
	}
	
	public void display()
	{
		Node temp = head;
		
		if(temp == null)
			System.out.println("stack is empty !!!");
		else 
		{
			while(temp != null)
			{
				System.out.print(temp.getData()+"->");
				temp = temp.getNext();
			}
		}
	}
	
	

}




///////////////////////////////////////////////////////
******************************************************
//////////////////////////////////////////////////////

			NODE

package Dynamic_Stack;

public class Node {
	private int data;
	private Node next;
	
	public Node()
	{
		data = 0;
		next = null;
	}
	
	public void setData(int value)
	{
		data = value;
	}
	
	public int getData()
	{
		return data;
	}
	
	public void setNext(Node newNode)
	{
		next = newNode;
	}
	
	public Node getNext()
	{
		return next;
	}
	
}//node





///////////////////////////////////////////////////
**************************************************
//////////////////////////////////////////////////


		MAIN CLASS


package Dynamic_Stack;

import java.util.Scanner;

public class Dyanamic_stack_Main {
	
	public static void main(String[] args)
	{
		

		Stack_using_Linked_list sull = new Stack_using_Linked_list();
		Scanner sc = new Scanner(System.in);
		int choice = 0;
		
		
		do 
		{
			System.out.println("\n\t...............MENU.............."+
								"\n\t1) Push."+
								"\n\t2) Pop."+
								"\n\t99) Display"+
								"\n\t0) Exit");
			System.out.println("Enter the choice :: ");
			choice = sc.nextInt();
			
			switch (choice) 
			{
			case 0:
					System.exit(0);
					break;
			
			case 1:
					System.out.println("\nEnter the value to insert:: \n");
					int val1 = sc.nextInt();
					sull.pushElement(val1);
					break;
			case 2:
					System.out.println("Popped Element :: "+sull.popElement());
					break;
			
			case 99:
					System.out.println("\n--------------------------------------------");
					sull.display();
					System.out.println("\n--------------------------------------------");
					break;
			}	
		}while(choice != 0);
	}
}
